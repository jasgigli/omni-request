{"version":3,"file":"index.js","sources":["../src/core/middleware/middlewareManager.ts","../src/types/error.ts","../src/adapters/browserAdapter.ts","../src/adapters/index.ts","../src/core/config.ts","../src/core/requestClient.ts","../src/config/defaults.ts","../src/index.ts"],"sourcesContent":["import {\n  IMiddlewareManager,\n  Middleware,\n  MiddlewareFunction,\n  ResponseMiddlewareFunction,\n} from \"../../types/middleware\";\nimport { RequestConfig } from \"../../types/request\";\nimport { ResponseData } from \"../../types/response\";\n\nexport class MiddlewareManager implements IMiddlewareManager {\n  private requestMiddlewares: MiddlewareFunction[] = [];\n  private responseMiddlewares: ResponseMiddlewareFunction[] = [];\n\n  get request(): MiddlewareFunction[] {\n    return this.requestMiddlewares;\n  }\n\n  get response(): ResponseMiddlewareFunction[] {\n    return this.responseMiddlewares;\n  }\n\n  async applyRequestMiddleware(config: RequestConfig): Promise<RequestConfig> {\n    let finalConfig = { ...config };\n    for (const middleware of this.requestMiddlewares) {\n      finalConfig = await middleware(finalConfig);\n    }\n    return finalConfig;\n  }\n\n  async applyResponseMiddleware(response: ResponseData): Promise<ResponseData> {\n    let finalResponse = { ...response };\n    for (const middleware of this.responseMiddlewares) {\n      finalResponse = await middleware(finalResponse);\n    }\n    return finalResponse;\n  }\n\n  use(middleware: Middleware): void {\n    if (this.isRequestMiddleware(middleware)) {\n      const requestHandler: MiddlewareFunction = async (\n        config: RequestConfig\n      ) => {\n        return await Promise.resolve(middleware.request(config));\n      };\n      this.requestMiddlewares.push(requestHandler);\n    }\n\n    if (this.isResponseMiddleware(middleware)) {\n      const responseHandler: ResponseMiddlewareFunction = async (\n        response: ResponseData\n      ) => {\n        return await Promise.resolve(middleware.response(response));\n      };\n      this.responseMiddlewares.push(responseHandler);\n    }\n  }\n\n  remove(middleware: Middleware): void {\n    if (this.isRequestMiddleware(middleware)) {\n      this.requestMiddlewares = this.requestMiddlewares.filter(\n        (handler) => handler !== middleware.request\n      );\n    }\n    if (this.isResponseMiddleware(middleware)) {\n      this.responseMiddlewares = this.responseMiddlewares.filter(\n        (handler) => handler !== middleware.response\n      );\n    }\n  }\n\n  private isRequestMiddleware(\n    middleware: Middleware\n  ): middleware is Middleware & {\n    request: NonNullable<Middleware[\"request\"]>;\n  } {\n    return typeof middleware.request === \"function\";\n  }\n\n  private isResponseMiddleware(\n    middleware: Middleware\n  ): middleware is Middleware & {\n    response: NonNullable<Middleware[\"response\"]>;\n  } {\n    return typeof middleware.response === \"function\";\n  }\n}\n","import { RequestConfig } from \"./request\";\r\n\r\nexport enum ErrorType {\r\n  NETWORK = \"NETWORK_ERROR\",\r\n  TIMEOUT = \"TIMEOUT_ERROR\",\r\n  ABORT = \"ABORT_ERROR\",\r\n  PARSE = \"PARSE_ERROR\",\r\n  VALIDATION = \"VALIDATION_ERROR\",\r\n  SERVER = \"SERVER_ERROR\",\r\n  REQUEST = \"REQUEST_ERROR\",\r\n  CIRCUIT_OPEN = \"CIRCUIT_OPEN\",\r\n  CANCELED = \"CANCELED\",\r\n}\r\n\r\nexport interface RequestErrorOptions {\r\n  message: string;\r\n  config?: RequestConfig;\r\n  status?: number;\r\n  response?: any;\r\n  type?: ErrorType;\r\n}\r\n\r\nexport class RequestError extends Error {\r\n  status: number;\r\n  config: RequestConfig;\r\n  response?: any;\r\n  type: ErrorType;\r\n\r\n  constructor(options: RequestErrorOptions) {\r\n    super(options.message);\r\n    this.name = \"RequestError\";\r\n    this.status = options.status || 0;\r\n    this.config = options.config || ({} as RequestConfig);\r\n    this.response = options.response;\r\n    this.type = options.type || ErrorType.NETWORK;\r\n  }\r\n}\r\n","import type { Adapter } from \"./adapter\";\r\nimport type { RequestConfig } from \"../types/request\";\r\nimport type { ResponseData } from \"../types/response\";\r\nimport { RequestError, ErrorType } from \"../types/error\";\r\n\r\nexport const browserAdapter: Adapter = {\r\n  async request<T>(config: RequestConfig): Promise<ResponseData<T>> {\r\n    if (!config.url) {\r\n      throw new RequestError({\r\n        message: \"URL is required\",\r\n        config,\r\n        type: ErrorType.VALIDATION,\r\n        status: 0,\r\n      });\r\n    }\r\n\r\n    const response = await fetch(config.url, {\r\n      method: config.method,\r\n      headers: config.headers,\r\n      body: config.data ? JSON.stringify(config.data) : undefined,\r\n    });\r\n\r\n    const data = await response.json();\r\n\r\n    return {\r\n      data,\r\n      status: response.status,\r\n      statusText: response.statusText,\r\n      headers: Object.fromEntries(response.headers.entries()),\r\n      config,\r\n    };\r\n  },\r\n};\r\n","import { browserAdapter } from \"./browserAdapter\";\r\nimport { Adapter } from \"./adapter\";\r\n\r\n// Function to detect the current environment and return appropriate adapter\r\nexport function getAdapter(): Adapter {\r\n  if (typeof window !== \"undefined\" && typeof window.fetch === \"function\") {\r\n    return browserAdapter;\r\n  }\r\n\r\n  // Add other environment checks and adapters here\r\n  // For now, default to browser adapter\r\n  return browserAdapter;\r\n}\r\n\r\nexport { browserAdapter };\r\n","import type { RequestConfig } from \"../types/request\";\n\nexport function createDefaultConfig(): RequestConfig {\n  return {\n    baseURL: \"\",\n    timeout: 0,\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n    validateStatus: (status: number) => status >= 200 && status < 300,\n    responseType: \"json\",\n  };\n}\n","import type { RequestConfig } from \"../types/request\";\r\nimport type { ResponseData } from \"../types/response\";\r\nimport type { Plugin } from \"../types/plugin\";\r\nimport type { IMiddlewareManager } from \"../types/middleware\";\r\nimport { MiddlewareManager } from \"./middleware/middlewareManager\";\r\nimport { getAdapter } from \"../adapters\";\r\nimport { createDefaultConfig } from \"./config\";\r\n\r\nexport class RequestClient {\r\n  private config: RequestConfig;\r\n  private middleware: IMiddlewareManager;\r\n  private plugins: Plugin[];\r\n\r\n  constructor(config: Partial<RequestConfig> = {}) {\r\n    this.config = { ...createDefaultConfig(), ...config };\r\n    this.middleware = new MiddlewareManager();\r\n    this.plugins = [];\r\n  }\r\n\r\n  async request<T = any>(\r\n    requestConfig: Partial<RequestConfig> = {}\r\n  ): Promise<ResponseData<T>> {\r\n    let finalConfig = { ...this.config, ...requestConfig };\r\n\r\n    try {\r\n      // Apply plugins pre-request\r\n      for (const plugin of this.plugins) {\r\n        if (plugin.onRequest) {\r\n          finalConfig = await plugin.onRequest(finalConfig);\r\n        } else if (plugin.beforeRequest) {\r\n          finalConfig = await plugin.beforeRequest(finalConfig);\r\n        }\r\n      }\r\n\r\n      // Apply middleware pre-request\r\n      finalConfig = await this.middleware.applyRequestMiddleware(finalConfig);\r\n\r\n      // Get the appropriate adapter for the current environment\r\n      const adapter = getAdapter();\r\n\r\n      // Make the request using the adapter's request method\r\n      let response = await adapter.request<T>(finalConfig);\r\n\r\n      // Apply middleware post-response\r\n      response = await this.middleware.applyResponseMiddleware(response);\r\n\r\n      // Apply plugins post-response\r\n      for (const plugin of this.plugins) {\r\n        if (plugin.onResponse) {\r\n          response = await plugin.onResponse(response);\r\n        } else if (plugin.afterResponse) {\r\n          response = await plugin.afterResponse(response);\r\n        }\r\n      }\r\n\r\n      return response;\r\n    } catch (error) {\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  use(plugin: Plugin): void {\r\n    this.plugins.push(plugin);\r\n  }\r\n\r\n  async get<T = any>(\r\n    url: string,\r\n    config: Partial<RequestConfig> = {}\r\n  ): Promise<ResponseData<T>> {\r\n    return this.request<T>({\r\n      ...config,\r\n      method: \"GET\",\r\n      url,\r\n    });\r\n  }\r\n\r\n  async post<T = any>(\r\n    url: string,\r\n    data?: any,\r\n    config: Partial<RequestConfig> = {}\r\n  ): Promise<ResponseData<T>> {\r\n    return this.request<T>({\r\n      ...config,\r\n      method: \"POST\",\r\n      url,\r\n      data,\r\n    });\r\n  }\r\n\r\n  async put<T = any>(\r\n    url: string,\r\n    data?: any,\r\n    config: Partial<RequestConfig> = {}\r\n  ): Promise<ResponseData<T>> {\r\n    return this.request<T>({\r\n      ...config,\r\n      method: \"PUT\",\r\n      url,\r\n      data,\r\n    });\r\n  }\r\n\r\n  async delete<T = any>(\r\n    url: string,\r\n    config: Partial<RequestConfig> = {}\r\n  ): Promise<ResponseData<T>> {\r\n    return this.request<T>({\r\n      ...config,\r\n      method: \"DELETE\",\r\n      url,\r\n    });\r\n  }\r\n\r\n  async patch<T = any>(\r\n    url: string,\r\n    data?: any,\r\n    config: Partial<RequestConfig> = {}\r\n  ): Promise<ResponseData<T>> {\r\n    return this.request<T>({\r\n      ...config,\r\n      method: \"PATCH\",\r\n      url,\r\n      data,\r\n    });\r\n  }\r\n\r\n  getMiddlewareManager(): IMiddlewareManager {\r\n    return this.middleware;\r\n  }\r\n}\r\n","import type { RequestConfig } from \"../types/request\";\n\nexport const defaultConfig: Partial<RequestConfig> = {\n  baseURL: \"\",\n  method: \"GET\",\n  timeout: 0,\n  headers: {\n    \"Content-Type\": \"application/json\",\n  },\n  validateStatus: (status: number) => status >= 200 && status < 300,\n  responseType: \"json\",\n};\n","import { RequestClient } from \"./core/requestClient\";\r\nimport { defaultConfig } from \"./config/defaults\";\r\nimport type { RequestConfig } from \"./types/request\";\r\nimport type { HttpMethod } from \"./types/http\";\r\nimport type { ResponseData } from \"./types/response\";\r\nimport type { Plugin } from \"./types/plugin\";\r\n\r\n/**\r\n * OmniRequest class extends RequestClient with additional static methods\r\n */\r\nexport class OmniRequest extends RequestClient {\r\n  static create(config: Partial<RequestConfig> = {}) {\r\n    return new OmniRequest({ ...defaultConfig, ...config });\r\n  }\r\n\r\n  static defaults = defaultConfig;\r\n}\r\n\r\n// Create default instance\r\nconst omnirequest = new OmniRequest(defaultConfig);\r\n\r\n// Add create method to the instance\r\nomnirequest.create = (config?: Partial<RequestConfig>) => {\r\n  return OmniRequest.create(config);\r\n};\r\n\r\n// Add defaults to the instance\r\nomnirequest.defaults = OmniRequest.defaults;\r\n\r\n// Export types\r\nexport { HttpMethod, RequestConfig, ResponseData, Plugin };\r\n\r\n// Export default instance\r\nexport default omnirequest;\r\n"],"names":[],"mappings":"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"}